package org.usfirst.frc.team6070.robot;

import edu.wpi.first.wpilibj.smartdashboard.SendableChooser;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.*;



/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the IterativeRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource
 * directory.
 */
public class Robot extends IterativeRobot {
	
	static double slow = 0.5;
	static double medium = 0.8;
	static double fast = 1.0;
	static double stop = 0.0;
	
	
  final String defaultAuto = "Default";
  final String customAuto = "My Auto";
  String autoSelected;
  SendableChooser chooser;
    
    //Victor motor = new Victor (5);
    
    Timer count= new Timer ();

	Victor BL = new Victor(0);
	Victor BR = new Victor(1);
	Victor FL = new Victor(2);
	Victor FR = new Victor(3);
	
	Talon talon = new Talon (4);
	
	Joystick Stick = new Joystick (0);	
	
	RobotDrive drive = new RobotDrive(BL, BR, FL, FR);
	

	/**
     * This function is run when the robot is first started up and should be
     * used for any initialization code.
     */
    public void robotInit() {
        chooser = new SendableChooser();
        chooser.addDefault("Default Auto", defaultAuto);
        chooser.addObject("My Auto", customAuto);
        SmartDashboard.putData("Auto choices", chooser);
    }
    
	/**
	 * This autonomous (along with the chooser code above) shows how to select between different autonomous modes
	 * using the dashboard. The sendable chooser code works with the Java SmartDashboard. If you prefer the LabVIEW
	 * Dashboard, remove all of the chooser code and uncomment the getString line to get the auto name from the text box
	 * below the Gyro
	 *
	 * You can add additional auto modes by adding additional comparisons to the switch structure below with additional strings.
	 * If using the SendableChooser make sure to add them to the chooser code above as well.
	 */
    public void autonomousInit() {
    	talon.set(slow);
		count.reset(); 
		count.start(); 
    }

    /**
     * This function is called periodically during autonomous
     */
    public void autonomousPeriodic() {
//    	mOne.set(0.5);
//    	if (count.get()==4.0){
//    		drive.arcadeDrive(0, 0); 
//    		((SpeedController) count).set(0.5);
//    		
//    	}
//    	
    	
    }

    /**
     * This function is called periodically during operator control
     * @return 
     */
    public  void teleopPeriodic() {
       drive.arcadeDrive(Stick.getX(), Stick.getY());
       
  
      
       if (Stick.getTrigger()){
    	   talon.set(fast);

       }
       
       else if (Stick.getRawButton(2)){
    	   talon.set(medium);
    	  
    	   
       }
       
       else if (Stick.getRawButton(7)){
    	   talon.set(slow);
    	   
       }else{
    	   talon.set(stop);
    	   
       }
       
       
      
    }
    
    /**
     * This function is called periodically during test mode
     */
    public void testPeriodic() {
    
    }
    
   
    
    	
}
    

